ㅎㅇ 18학번 신주용임
발표를 못 할 지도 몰라서 발표용 자료보다 조금 더 자세하게 과제 형식으로 풀어썼으니 양해 부탁

제가 발표할 주제는 주택가 변동률과 출산율의 상관관계입니다.
이전의 발표에서 사용했던 데이터는 지가변동률 데이터입니다. 이후에 따로 언급하겠지만
실제로 분석시에는 거의 동일한 결과가 도출되었습니다.
이전의 데이터와 주택가격, 주택가 변동률 등의 정보가 담긴 데이터를 추가하고
출산율 데이터에는 결혼률, 이혼률 등의 데이터를 추가하였습니다.
스트리밍 처리는 카프카를 통해서 스파크상에 구현하였고,
로지스틱 회귀 알고리즘을 사용하여
머신러닝 처리를 구현하였습니다.

이전에 진행했던 프로젝트를 요약한 그래프입니다.
지가 변동률과 출산율에 대한 전국의 데이터를 가져와 1년 단위로 평균을 도출하여 그래프에 모두 합병하였습니다.
이번 프로젝트는 지난번의 추론을 증명하는 방식으로 설명하도록 하겠습니다.



데이터 스트리밍입니다.
데이터 스트리밍 처리를 위해 카프카를 사용해 보았습니다. 카프카에 대해 간략하게 설명하자면 실시간으로 기록 스트림을 게시, 구독,
저장 및 처리할 수 있는 분산 데이터 스트리밍 플랫폼입니다.
주'키퍼'와 카프카를 연결하고, 주피터와 함께 스파크 종속성을 설정한 후에 파이스파크 쉘 실행시 패키지로써 연동해줍니다.
마스터 노드에서 프로듀서가 토픽을 생성하고, 브로커 포트로 파일 혹은 메시지를 전송하면
스파크에서 생성한 컨슈머가 메시지를 받아들이는 형식으로 사용하였습니다.

가운데 사진과 같이 마스터 노드 터미널에서 브로커 포트를 통해 전송합니다.
파일을 전송하고 수신하는 방식과 텍스트를 전송하고 수신하는 방식 모두 적용이 가능합니다.
저는 이번에 파일을 전송하고 수신하는 방식을 사용하였습니다.
스파크에서 컨슈머가 작동중일때 프로듀서로부터 메시지가 도착하면
아래의 사진과 같이 콘솔에 스테이지가 나타나고, 우측의 사진과 같이 메시지가 전달 됩니다.

이 코드는 메시지를 전송받을 컨슈머를 구현한 코드입니다.
동일하게 9092 브로커 포트를 사용하고, readStream으로 받은 데이터를 writeStream으로 콘솔에 출력해줍니다.
메모리 옵션을 사용하면 메모리에 저장하여 사용하는 것이 가능하고, 우측의 사진처럼 console, csv로 쓰기 모두 가능합니다.
구현 단계에서는 자원상의 한계와 속도 문제 때문에 format을 csv로 지정하여 하둡에 저장한 후 사용하였습니다.
실제로 설치와 연동, 구현 모두 마쳤지만 전송되는 데이터의 속도가 너무 느려 사용하기 어렵다고 판단되어 파일 적재용으로만 사용하였습니다.



다음으로는 데이터 분석입니다. 간략하게 추가된 데이터에 대해 분석해보도록 하겠습니다.
우측 상단이 집값 변동률에 대한 그래프, 하단이 지가변동률 그래프입니다.
이번에는 상단의 집값 데이터를 사용하여 모든 작업과 분석을 수행하였습니다.
데이터의 소스는 한국 부동산원 부동산통계정보시스템과 국가 통계포털입니다.
ML처리 전에 육안으로 데이터의 연관성을 대략적으로 파악하기 위해 산점도를 생성해보았습니다.
우측 상단은 결혼률과 출산율의 상관관계 파악을 위해 작성하였습니다.
X가 결혼율, Y가 출산율로 우상향을 그리는 양의 선형관계 그래프임을 알 수 있습니다. 고로 출산율과 결혼율은 비례하는 것을 추론할 수 있습니다.
우측 하단은 주택가 변동률과 출산율에 관한 그래프입니다. 앞선 프로젝트에서 추론한 것과 달리 주택가 변동률이 0.0~0.5 사이에
점들이 분포하는 것을 알 수 있습니다.

이는 집값의 변동과 자녀 계획 검토 사이의 시간차로 추정되고, 임신 기간이 약 10개월 정도이므로 출산할 때의 주택 가격과
출산 여부를 결정할 때의 주택 가격이 최소 1년 이상 차이나는 것을 알 수 있습니다.
주제와는 별개로, 집값 하락의 주된 원인은 금리의 인상 때문입니다. 이러한 이유때문에 가계상황이 나쁘지 않고, 주택가격이 비싸지지 않은 상태인 0.0~0.5의 변동률일때에 가장 높은 분포를 보이는 것이라는 추론을 할 수 있습니다.



다음은 이진 로지스틱 회귀의 구현입니다.
앞서 스트리밍으로 받은 파일을 불러와 스키마를 지정하고, 카테고리형으로 사용할 자료들을 선택해 열을 추가합니다.
기준점이 될 지표들을 출력하면 우측과 같이 실수형으로 출력됩니다.

훈련용 데이터 7 대 테스트 데이터 3으로 데이터를 분할해줍니다.
이후 피처 전처리를 수행합니다. 3개의 카테고리 값을 스트링인덱서 추정기에 삽입하여 숫자로 변환하고
그 숫자를 다시 원핫인코더에 삽입하여 이진 벡터로 변환합니다.
라벨(타겟)이 될 출산율은 0을 기준으로 TRUE/FALSE로 이분되었습니다.
아래 스트링인덱서의 핏 메서드를 사용하여 모델을 리턴합니다.

뉴메릭콜에 담긴 숫자로 된 열, 원 핫 인코딩이 된 열들을 벡터어셈블 변환기에서 하나의 벡터로 결합합니다.
위에서 아웃풋콜로 설정한 피쳐스를 피쳐로 하고, 페널티 항을 1로 하는 로지스틱 회귀 분석 모델을 정의합니다.
우측 하단의 코드는 앞에서 정의된 모든 과정을 하나의 파이프라인에 구축하고 훈련 데이터를 FIT하여 파이프라인 학습 모델을 구축합니다.
이후 앞서 분할해둔 데이터를 적용합니다.

생성된 모델에 테스트 데이터를 삽입하여 정확도를 분석합니다. 92.9%로 굉장히 높은 편인데, 이는 데이터의 구성때문입니다.
실제로 대한민국의 출산률이 해가 갈수록 낮아지고 있어, 대부분의 데이터가 false 혹은 음수를 가리키고 있습니다
이로 인해 예측 정확도가 굉장히 높게 책정됩니다.
아래는 현재의 모델을 가지고 예측한 값입니다. 집값이 내린 데이터는 왼쪽의 바처럼 거의 없어 분석하는데 어려움이 있고
집값이 오를때, 출산율이 떨어진다는 예측이 압도적으로 많은 것을 알 수 있습니다.

크로스벨리데이터를 사용하여 하이퍼 파라미터 튜닝을 적용한 모델입니다.
앞서 생성한 파이프라인에 6개의 파라미터를 삽입해 튜닝을 적용해줍니다. 저는 정규화인자값을 0.1, 0.7, 2.0, 엘라스틱넷파라미터를 0.0, 0.5, 1/0으로 주었습니다. 동일하게 훈련 데이터를 fit해주고, 테스트 데이터에도 튜닝된 모델을 적용합니다.
예측 정확도가 96%로 앞선 모델에 비해 비약적인 상승이 있는 것을 알 수 있습니다.
우측은 하이퍼파라미터 튜닝이 적용된 모델의 예측입니다. 앞선 모델에 비해 집값이 상승했을 때에도 출산율이 오를 확률이 소폭 상승하였습니다.

보이는 그래프중 좌측이 결혼율, 우측이 이혼율에 관한 예측입니다.
결혼율 3.4~4.8까지는 출산율이 올라갈 확률이 올라가고, 이후로는 출산율이 내려갈 확률이 절대적으로 높습니다.
이혼률의 경우에는 2.3까지는 출산율이 올라갈 확률이 높지만, 이후로는 출산율이 낮아질 확률이 압도적으로 높습니다.


스파크상에서 수행한 것을 모니터링했습니다. 제출된 앱이 24개로 현재 수행되고 있는 앱이 하나, 총 8기가의 메모리중 5기가 사용 등
여러 지표들을 확인할 수 있습니다.
스파크 서브밋으로 작업을 제출하면, 스파크 상에서 동작하고 있는 것을 여기서 확인할 수 있습니다.